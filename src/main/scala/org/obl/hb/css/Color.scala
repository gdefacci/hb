package org.obl.hb.css

trait Color extends OutlineColorValue with BorderValue with BackgroundValue

object Color {
  def fromTuple3(p: (Int, Int, Int)) = RGB(p._1, p._2, p._3)
}

object Transparent extends Color {
  override def toString = "transparent"
}

class RGB(r: Int, g: Int, b: Int, formatter: (Int, Int, Int) => String) extends Color {
  override def toString = formatter(r, g, b)
}

object RGB {
  def apply(r: Int, g: Int, b: Int) = {
    if (r > 255 || g > 255 || b > 255 || r < 0 || g < 0 || b < 0) throw new Error("unallowed rgb value: RGB(" + r + ", " + g + ", " + b + ")")
    new RGB(r, g, b, (r, g, b) => "#" + HexUtils.toHexString(r) + HexUtils.toHexString(g) + HexUtils.toHexString(b))
  }

  def percentage(r: Int, g: Int, b: Int) = {
    if (r > 100 || g > 100 || b > 100 || r < 0 || g < 0 || b < 0) throw new Error("unallowed rgb value: RGB(" + r + "%, " + g + "%, " + b + "%)")
    new RGB(r, g, b, (r, g, b) => "rgb(" + r + "%," + g + "%," + b + "%)")
  }

}

object Colors {
  val aliceBlue = RGB(0xF0, 0xF8, 0xFF)
  val antiqueWhite = RGB(0xFA, 0xEB, 0xD7)
  val aqua = RGB(0x00, 0xFF, 0xFF)
  val aquamarine = RGB(0x7F, 0xFF, 0xD4)
  val azure = RGB(0xF0, 0xFF, 0xFF)
  val beige = RGB(0xF5, 0xF5, 0xDC)
  val bisque = RGB(0xFF, 0xE4, 0xC4)
  val black = RGB(0x00, 0x00, 0x00)
  val blanchedalmond = RGB(0xFF, 0xEB, 0xCD)
  val blue = RGB(0x00, 0x00, 0xFF)
  val blueViolet = RGB(0x8A, 0x2B, 0xE2)
  val brown = RGB(0xA5, 0x2A, 0x2A)
  val burlywood = RGB(0xDE, 0xB8, 0x87)
  val cadetBlue = RGB(0x5F, 0x9E, 0xA0)
  val chartreuse = RGB(0x7F, 0xFF, 0x00)
  val chocolate = RGB(0xD2, 0x69, 0x1E)
  val coral = RGB(0xFF, 0x7F, 0x50)
  val cornflowerBlue = RGB(0x64, 0x95, 0xED)
  val cornsilk = RGB(0xFF, 0xF8, 0xDC)
  val crimson = RGB(0xDC, 0x14, 0x3C)
  val cyan = RGB(0x00, 0xFF, 0xFF)
  val darkBlue = RGB(0x00, 0x00, 0x8B)
  val darkCyan = RGB(0x00, 0x8B, 0x8B)
  val darkGoldenrod = RGB(0xB8, 0x86, 0x0B)
  val darkGray = RGB(0xA9, 0xA9, 0xA9)
  val darkGreen = RGB(0x00, 0x64, 0x00)
  val darkGrey = RGB(0xA9, 0xA9, 0xA9)
  val darkKhaki = RGB(0xBD, 0xB7, 0x6B)
  val darkMagenta = RGB(0x8B, 0x00, 0x8B)
  val darkOliveGreen = RGB(0x55, 0x6B, 0x2F)
  val darkOrange = RGB(0xFF, 0x8C, 0x00)
  val darkOrchid = RGB(0x99, 0x32, 0xCC)
  val darkRed = RGB(0x8B, 0x00, 0x00)
  val darkSalmon = RGB(0xE9, 0x96, 0x7A)
  val darkSeaGreen = RGB(0x8F, 0xBC, 0x8F)
  val darkSlateBlue = RGB(0x48, 0x3D, 0x8B)
  val darkSlateGray = RGB(0x2F, 0x4F, 0x4F)
  val darkSlateGrey = RGB(0x2F, 0x4F, 0x4F)
  val darkTurquoise = RGB(0x00, 0xCE, 0xD1)
  val darkViolet = RGB(0x94, 0x00, 0xD3)
  val deepPink = RGB(0xFF, 0x14, 0x93)
  val deepSkyBlue = RGB(0x00, 0xBF, 0xFF)
  val dimGray = RGB(0x69, 0x69, 0x69)
  val dimGrey = RGB(0x69, 0x69, 0x69)
  val dodgerBlue = RGB(0x1E, 0x90, 0xFF)
  val firebrick = RGB(0xB2, 0x22, 0x22)
  val floralWhite = RGB(0xFF, 0xFA, 0xF0)
  val forestGreen = RGB(0x22, 0x8B, 0x22)
  val fuchsia = RGB(0xFF, 0x00, 0xFF)
  val gainsboro = RGB(0xDC, 0xDC, 0xDC)
  val ghostWhite = RGB(0xF8, 0xF8, 0xFF)
  val gold = RGB(0xFF, 0xD7, 0x00)
  val goldenrod = RGB(0xDA, 0xA5, 0x20)
  val gray = RGB(0x80, 0x80, 0x80)
  val green = RGB(0x00, 0x80, 0x00)
  val greenYellow = RGB(0xAD, 0xFF, 0x2F)
  val grey = RGB(0x80, 0x80, 0x80)
  val honeydew = RGB(0xF0, 0xFF, 0xF0)
  val hotPink = RGB(0xFF, 0x69, 0xB4)
  val indianRed = RGB(0xCD, 0x5C, 0x5C)
  val indigo = RGB(0x4B, 0x00, 0x82)
  val ivory = RGB(0xFF, 0xFF, 0xF0)
  val khaki = RGB(0xF0, 0xE6, 0x8C)
  val lavender = RGB(0xE6, 0xE6, 0xFA)
  val lavenderblush = RGB(0xFF, 0xF0, 0xF5)
  val lawnGreen = RGB(0x7C, 0xFC, 0x00)
  val lemonchiffon = RGB(0xFF, 0xFA, 0xCD)
  val lightBlue = RGB(0xAD, 0xD8, 0xE6)
  val lightCoral = RGB(0xF0, 0x80, 0x80)
  val lightCyan = RGB(0xE0, 0xFF, 0xFF)
  val lightGoldenrodYellow = RGB(0xFA, 0xFA, 0xD2)
  val lightGray = RGB(0xD3, 0xD3, 0xD3)
  val lightGreen = RGB(0x90, 0xEE, 0x90)
  val lightGrey = RGB(0xD3, 0xD3, 0xD3)
  val lightPink = RGB(0xFF, 0xB6, 0xC1)
  val lightSalmon = RGB(0xFF, 0xA0, 0x7A)
  val lightSeaGreen = RGB(0x20, 0xB2, 0xAA)
  val lightSkyBlue = RGB(0x87, 0xCE, 0xFA)
  val lightSlateGray = RGB(0x77, 0x88, 0x99)
  val lightSlateGrey = RGB(0x77, 0x88, 0x99)
  val lightSteelBlue = RGB(0xB0, 0xC4, 0xDE)
  val lightYellow = RGB(0xFF, 0xFF, 0xE0)
  val lime = RGB(0x00, 0xFF, 0x00)
  val limeGreen = RGB(0x32, 0xCD, 0x32)
  val linen = RGB(0xFA, 0xF0, 0xE6)
  val magenta = RGB(0xFF, 0x00, 0xFF)
  val maroon = RGB(0x80, 0x00, 0x00)
  val mediumAquamarine = RGB(0x66, 0xCD, 0xAA)
  val mediumBlue = RGB(0x00, 0x00, 0xCD)
  val mediumOrchid = RGB(0xBA, 0x55, 0xD3)
  val mediumPurple = RGB(0x93, 0x70, 0xDB)
  val mediumSeaGreen = RGB(0x3C, 0xB3, 0x71)
  val mediumSlateBlue = RGB(0x7B, 0x68, 0xEE)
  val mediumSpringGreen = RGB(0x00, 0xFA, 0x9A)
  val mediumTurquoise = RGB(0x48, 0xD1, 0xCC)
  val mediumVioletred = RGB(0xC7, 0x15, 0x85)
  val midnightBlue = RGB(0x19, 0x19, 0x70)
  val mintCream = RGB(0xF5, 0xFF, 0xFA)
  val mistyRose = RGB(0xFF, 0xE4, 0xE1)
  val moccasin = RGB(0xFF, 0xE4, 0xB5)
  val navajoWhite = RGB(0xFF, 0xDE, 0xAD)
  val navy = RGB(0x00, 0x00, 0x80)
  val oldlace = RGB(0xFD, 0xF5, 0xE6)
  val olive = RGB(0x80, 0x80, 0x00)
  val olivedrab = RGB(0x6B, 0x8E, 0x23)
  val orange = RGB(0xFF, 0xA5, 0x00)
  val orangeRed = RGB(0xFF, 0x45, 0x00)
  val orchid = RGB(0xDA, 0x70, 0xD6)
  val paleGoldenrod = RGB(0xEE, 0xE8, 0xAA)
  val paleGreen = RGB(0x98, 0xFB, 0x98)
  val paleTurquoise = RGB(0xAF, 0xEE, 0xEE)
  val paleVioletred = RGB(0xDB, 0x70, 0x93)
  val papayawhip = RGB(0xFF, 0xEF, 0xD5)
  val peachpuff = RGB(0xFF, 0xDA, 0xB9)
  val peru = RGB(0xCD, 0x85, 0x3F)
  val pink = RGB(0xFF, 0xC0, 0xCB)
  val plum = RGB(0xDD, 0xA0, 0xDD)
  val powderBlue = RGB(0xB0, 0xE0, 0xE6)
  val purple = RGB(0x80, 0x00, 0x80)
  val red = RGB(0xFF, 0x00, 0x00)
  val rosyBrown = RGB(0xBC, 0x8F, 0x8F)
  val royalBlue = RGB(0x41, 0x69, 0xE1)
  val saddleBrown = RGB(0x8B, 0x45, 0x13)
  val salmon = RGB(0xFA, 0x80, 0x72)
  val sandyBrown = RGB(0xF4, 0xA4, 0x60)
  val seaGreen = RGB(0x2E, 0x8B, 0x57)
  val seashell = RGB(0xFF, 0xF5, 0xEE)
  val sienna = RGB(0xA0, 0x52, 0x2D)
  val silver = RGB(0xC0, 0xC0, 0xC0)
  val skyBlue = RGB(0x87, 0xCE, 0xEB)
  val slateBlue = RGB(0x6A, 0x5A, 0xCD)
  val slateGray = RGB(0x70, 0x80, 0x90)
  val slateGrey = RGB(0x70, 0x80, 0x90)
  val snow = RGB(0xFF, 0xFA, 0xFA)
  val springGreen = RGB(0x00, 0xFF, 0x7F)
  val steelBlue = RGB(0x46, 0x82, 0xB4)
  val tan = RGB(0xD2, 0xB4, 0x8C)
  val teal = RGB(0x00, 0x80, 0x80)
  val thistle = RGB(0xD8, 0xBF, 0xD8)
  val tomato = RGB(0xFF, 0x63, 0x47)
  val turquoise = RGB(0x40, 0xE0, 0xD0)
  val violet = RGB(0xEE, 0x82, 0xEE)
  val wheat = RGB(0xF5, 0xDE, 0xB3)
  val white = RGB(0xFF, 0xFF, 0xFF)
  val whitesmoke = RGB(0xF5, 0xF5, 0xF5)
  val yellow = RGB(0xFF, 0xFF, 0x00)
  val yellowGreen = RGB(0x9A, 0xCD, 0x32)
}
